[debug] Created tunnel using local port: '57305'

[debug] SERVER: "127.0.0.1:57305"

[debug] Original chart version: ""
[debug] CHART PATH: /Users/yousef.sedky/axiom/jenkins

NAME:   giddy-magpie
REVISION: 1
RELEASED: Sun Jun  2 17:54:35 2019
CHART: jenkins-1.1.23
USER-SUPPLIED VALUES:
{}

COMPUTED VALUES:
agent:
  TTYEnabled: false
  alwaysPullImage: false
  args: null
  command: null
  componentName: jenkins-slave
  containerCap: 10
  customJenkinsLabels: []
  enabled: true
  envVars: null
  idleMinutes: 0
  image: jenkins/jnlp-slave
  imagePullSecretName: null
  imageTag: 3.27-1
  nodeSelector: {}
  podName: default
  podRetention: Never
  privileged: false
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 200m
      memory: 256Mi
  sideContainerName: jnlp
  volumes: null
  yamlTemplate: null
backup:
  annotations:
    iam.amazonaws.com/role: jenkins
  componentName: backup
  destination: s3://nuvo-jenkins-data/backup
  enabled: false
  env:
  - name: AWS_REGION
    value: us-east-1
  extraArgs: []
  image:
    repository: nuvo/kube-tasks
    tag: 0.1.2
  resources:
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: 1
      memory: 1Gi
  schedule: 0 2 * * *
checkDeprecation: true
master:
  JCasC:
    configScripts:
      welcome-message: |
        jenkins:
          systemMessage: Welcome to our CI\CD server.  This Jenkins is configured and managed 'as code'.
    enabled: false
    pluginVersion: 1.5
    supportPluginVersion: 1.5
  additionalConfig: {}
  adminPassword: adminpw
  adminUser: admin
  authorizationStrategy: |-
    <authorizationStrategy class="hudson.security.FullControlOnceLoggedInAuthorizationStrategy">
      <denyAnonymousReadAccess>true</denyAnonymousReadAccess>
    </authorizationStrategy>
  cli: false
  componentName: jenkins-master
  csrf:
    defaultCrumbIssuer:
      enabled: true
      proxyCompatability: true
  customConfigMap: false
  customInitContainers: []
  deploymentLabels: {}
  disabledAgentProtocols:
  - JNLP-connect
  - JNLP2-connect
  enableRawHtmlMarkupFormatter: false
  extraPorts: null
  healthProbeLivenessFailureThreshold: 5
  healthProbeLivenessInitialDelay: 90
  healthProbeLivenessPeriodSeconds: 10
  healthProbeReadinessFailureThreshold: 3
  healthProbeReadinessInitialDelay: 60
  healthProbeReadinessPeriodSeconds: 10
  healthProbes: true
  healthProbesLivenessTimeout: 5
  healthProbesReadinessTimeout: 5
  hostAliases: []
  hostNetworking: false
  image: jenkins/jenkins
  imagePullPolicy: IfNotPresent
  imagePullSecretName: null
  imageTag: lts
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
    apiVersion: extensions/v1beta1
    enabled: true
    hosts:
    - host: slashtec.local
      paths: /jenkins
    labels: {}
  initScripts: null
  jobs: null
  lifecycle: null
  nodePort: 32323
  nodeSelector: {}
  numExecutors: 0
  overwriteConfig: false
  overwriteJobs: false
  podAnnotations: {}
  podLabels: {}
  prometheus:
    alertingRulesAdditionalLabels: {}
    alertingrules: []
    enabled: false
    scrapeEndpoint: /prometheus
    scrapeInterval: 60s
    serviceMonitorAdditionalLabels: {}
  resources:
    limits:
      cpu: 2000m
      memory: 4096Mi
    requests:
      cpu: 50m
      memory: 256Mi
  rollingUpdate: {}
  route:
    annotations: {}
    enabled: false
    labels: {}
  scriptApproval: null
  securityRealm: <securityRealm class="hudson.security.LegacySecurityRealm"/>
  serviceAnnotations: {}
  serviceLabels: {}
  servicePort: 8080
  serviceType: NodePort
  sidecars:
    configAutoReload:
      enabled: false
      folder: /var/jenkins_home/casc_configs
      image: shadwell/k8s-sidecar:0.0.2
      imagePullPolicy: IfNotPresent
      resources: null
      sshTcpPort: 1044
    other: null
  slaveHostPort: null
  slaveKubernetesNamespace: null
  slaveListenerPort: 50000
  slaveListenerServiceAnnotations: {}
  slaveListenerServiceType: ClusterIP
  targetPort: 8080
  tolerations: []
  usePodSecurityContext: true
  useSecurity: true
networkPolicy:
  apiVersion: networking.k8s.io/v1
  enabled: false
persistence:
  accessMode: ReadWriteOnce
  annotations: {}
  enabled: true
  existingClaim: null
  mounts: null
  size: 8Gi
  storageClass: null
  volumes: null
rbac:
  create: true
serviceAccount:
  annotations: {}
  create: true
  name: null
serviceAccountAgent:
  annotations: {}
  create: false
  name: null

HOOKS:
---
# giddy-magpie-ui-test-ahx6k
apiVersion: v1
kind: Pod
metadata:
  name: "giddy-magpie-ui-test-ahx6k"
  annotations:
    "helm.sh/hook": test-success
spec:
  initContainers:
    - name: "test-framework"
      image: "dduportal/bats:0.4.0"
      command:
      - "bash"
      - "-c"
      - |
        set -ex
        # copy bats to tools dir
        cp -R /usr/local/libexec/ /tools/bats/
      volumeMounts:
      - mountPath: /tools
        name: tools
  containers:
    - name: giddy-magpie-ui-test
      image: jenkins/jenkins:lts
      command: ["/tools/bats/bats", "-t", "/tests/run.sh"]
      volumeMounts:
      - mountPath: /tests
        name: tests
        readOnly: true
      - mountPath: /tools
        name: tools
  volumes:
  - name: tests
    configMap:
      name: giddy-magpie-jenkins-tests
  - name: tools
    emptyDir: {}
  restartPolicy: Never
MANIFEST:

---
# Source: jenkins/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: giddy-magpie-jenkins
  labels:
    "app.kubernetes.io/name": 'jenkins'
    "helm.sh/chart": "jenkins-1.1.23"
    "app.kubernetes.io/managed-by": "Tiller"
    "app.kubernetes.io/instance": "giddy-magpie"
    "app.kubernetes.io/component": "jenkins-master"
type: Opaque
data:
  jenkins-admin-password: "YWRtaW5wdw=="
  jenkins-admin-user: "YWRtaW4="
---
# Source: jenkins/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: giddy-magpie-jenkins
  labels:
    "app.kubernetes.io/name": 'jenkins'
    "helm.sh/chart": "jenkins-1.1.23"
    "app.kubernetes.io/managed-by": "Tiller"
    "app.kubernetes.io/instance": "giddy-magpie"
    "app.kubernetes.io/component": "jenkins-master"
data:
  config.xml: |-
    <?xml version='1.0' encoding='UTF-8'?>
    <hudson>
      <disabledAdministrativeMonitors/>
      <version>lts</version>
      <numExecutors>0</numExecutors>
      <mode>NORMAL</mode>
      <useSecurity>true</useSecurity>
      <authorizationStrategy class="hudson.security.FullControlOnceLoggedInAuthorizationStrategy">
        <denyAnonymousReadAccess>true</denyAnonymousReadAccess>
      </authorizationStrategy>
      <securityRealm class="hudson.security.LegacySecurityRealm"/>
      <disableRememberMe>false</disableRememberMe>
      <projectNamingStrategy class="jenkins.model.ProjectNamingStrategy$DefaultProjectNamingStrategy"/>
      <workspaceDir>${JENKINS_HOME}/workspace/${ITEM_FULLNAME}</workspaceDir>
      <buildsDir>${ITEM_ROOTDIR}/builds</buildsDir>
      <markupFormatter class="hudson.markup.EscapedMarkupFormatter"/>
      <jdks/>
      <viewsTabBar class="hudson.views.DefaultViewsTabBar"/>
      <myViewsTabBar class="hudson.views.DefaultMyViewsTabBar"/>
      <clouds>
        <org.csanchez.jenkins.plugins.kubernetes.KubernetesCloud plugin="kubernetes@">
          <name>kubernetes</name>
          <templates>
            <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
              <inheritFrom></inheritFrom>
              <name>default</name>
              <instanceCap>2147483647</instanceCap>
              <idleMinutes>0</idleMinutes>
              <label>giddy-magpie-jenkins-slave </label>
              <serviceAccount>default</serviceAccount>
              <nodeSelector></nodeSelector>
                <nodeUsageMode>NORMAL</nodeUsageMode>
              <volumes>
              </volumes>
              <containers>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>jenkins/jnlp-slave:3.27-1</image>
                  <privileged>false</privileged>
                  <alwaysPullImage>false</alwaysPullImage>
                  <workingDir>/home/jenkins</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  # Resources configuration is a little hacky. This was to prevent breaking
                  # changes, and should be cleanned up in the future once everybody had
                  # enough time to migrate.
                  <resourceRequestCpu>200m</resourceRequestCpu>
                  <resourceRequestMemory>256Mi</resourceRequestMemory>
                  <resourceLimitCpu>200m</resourceLimitCpu>
                  <resourceLimitMemory>256Mi</resourceLimitMemory>
                  <envVars>
                    <org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                      <key>JENKINS_URL</key>
                      <value>http://giddy-magpie-jenkins.default.svc.cluster.local:8080</value>
                    </org.csanchez.jenkins.plugins.kubernetes.ContainerEnvVar>
                  </envVars>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              </containers>
              <envVars>
              </envVars>
              <annotations/>
              <imagePullSecrets/>
              <nodeProperties/>
              <podRetention class="org.csanchez.jenkins.plugins.kubernetes.pod.retention.Default"/>
            </org.csanchez.jenkins.plugins.kubernetes.PodTemplate></templates>
          <serverUrl>https://kubernetes.default</serverUrl>
          <skipTlsVerify>false</skipTlsVerify>
          <namespace>default</namespace>
          <jenkinsUrl>http://giddy-magpie-jenkins:8080</jenkinsUrl>
          <jenkinsTunnel>giddy-magpie-jenkins-agent:50000</jenkinsTunnel>
          <containerCap>10</containerCap>
          <retentionTimeout>5</retentionTimeout>
          <connectTimeout>0</connectTimeout>
          <readTimeout>0</readTimeout>
          <podRetention class="org.csanchez.jenkins.plugins.kubernetes.pod.retention.Never"/>
        </org.csanchez.jenkins.plugins.kubernetes.KubernetesCloud>
      </clouds>
      <quietPeriod>5</quietPeriod>
      <scmCheckoutRetryCount>0</scmCheckoutRetryCount>
      <views>
        <hudson.model.AllView>
          <owner class="hudson" reference="../../.."/>
          <name>All</name>
          <filterExecutors>false</filterExecutors>
          <filterQueue>false</filterQueue>
          <properties class="hudson.model.View$PropertyList"/>
        </hudson.model.AllView>
      </views>
      <primaryView>All</primaryView>
      <slaveAgentPort>50000</slaveAgentPort>
      <disabledAgentProtocols>
        <string>JNLP-connect</string>
        <string>JNLP2-connect</string>
      </disabledAgentProtocols>
      <label></label>
      <crumbIssuer class="hudson.security.csrf.DefaultCrumbIssuer">
        <excludeClientIPFromCrumb>true</excludeClientIPFromCrumb>
      </crumbIssuer>
      <nodeProperties/>
      <globalNodeProperties/>
      <noUsageStatistics>true</noUsageStatistics>
    </hudson>
  jenkins.model.JenkinsLocationConfiguration.xml: |-
    <?xml version='1.1' encoding='UTF-8'?>
    <jenkins.model.JenkinsLocationConfiguration>
      <adminAddress></adminAddress>
      <jenkinsUrl>http://giddy-magpie-jenkins:8080</jenkinsUrl>
    </jenkins.model.JenkinsLocationConfiguration>
  jenkins.CLI.xml: |-
    <?xml version='1.1' encoding='UTF-8'?>
    <jenkins.CLI>
      <enabled>false</enabled>
    </jenkins.CLI>
  apply_config.sh: |-
    mkdir -p /usr/share/jenkins/ref/secrets/;
    echo "false" > /usr/share/jenkins/ref/secrets/slave-to-master-security-kill-switch;
    yes n | cp -i /var/jenkins_config/config.xml /var/jenkins_home;
    yes n | cp -i /var/jenkins_config/jenkins.CLI.xml /var/jenkins_home;
    yes n | cp -i /var/jenkins_config/jenkins.model.JenkinsLocationConfiguration.xml /var/jenkins_home;
  plugins.txt: |-
---
# Source: jenkins/templates/tests/test-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: giddy-magpie-jenkins-tests
data:
  run.sh: |-
    @test "Testing Jenkins UI is accessible" {
      curl --retry 48 --retry-delay 10 giddy-magpie-jenkins:8080/login
    }
---
# Source: jenkins/templates/jenkins-pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: giddy-magpie-jenkins
  namespace: default
  labels:
    "app.kubernetes.io/name": 'jenkins'
    "helm.sh/chart": "jenkins-1.1.23"
    "app.kubernetes.io/managed-by": "Tiller"
    "app.kubernetes.io/instance": "giddy-magpie"
    "app.kubernetes.io/component": "jenkins-master"
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 8Gi
  hostPath:
    path: /tmp/jenkins/pv-data
    type: ""
  persistentVolumeReclaimPolicy: Retain
---
# Source: jenkins/templates/home-pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: giddy-magpie-jenkins
  labels:
    "app.kubernetes.io/name": 'jenkins'
    "helm.sh/chart": "jenkins-1.1.23"
    "app.kubernetes.io/managed-by": "Tiller"
    "app.kubernetes.io/instance": "giddy-magpie"
    "app.kubernetes.io/component": "jenkins-master"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: jenkins/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: giddy-magpie-jenkins
  labels:
    "app.kubernetes.io/name": 'jenkins'
    "helm.sh/chart": "jenkins-1.1.23"
    "app.kubernetes.io/managed-by": "Tiller"
    "app.kubernetes.io/instance": "giddy-magpie"
    "app.kubernetes.io/component": "jenkins-master"
---
# Source: jenkins/templates/rbac.yaml
# This role is used to allow Jenkins scheduling of agents via Kubernetes plugin.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: giddy-magpie-jenkins-schedule-agents
  namespace: default
  labels:
    "app.kubernetes.io/name": 'jenkins'
    "helm.sh/chart": "jenkins-1.1.23"
    "app.kubernetes.io/managed-by": "Tiller"
    "app.kubernetes.io/instance": "giddy-magpie"
    "app.kubernetes.io/component": "jenkins-master"
rules:
- apiGroups: [""]
  resources: ["pods", "pods/exec", "pods/log"]
  verbs: ["*"]
---
# Source: jenkins/templates/rbac.yaml
# We bind the role to the Jenkins service account. The role binding is created in the namespace
# where the agents are supposed to run.
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: giddy-magpie-jenkins-schedule-agents
  namespace: default
  labels:
    "app.kubernetes.io/name": 'jenkins'
    "helm.sh/chart": "jenkins-1.1.23"
    "app.kubernetes.io/managed-by": "Tiller"
    "app.kubernetes.io/instance": "giddy-magpie"
    "app.kubernetes.io/component": "jenkins-master"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: giddy-magpie-jenkins-schedule-agents
subjects:
- kind: ServiceAccount
  name: giddy-magpie-jenkins
  namespace: default
---
# Source: jenkins/templates/jenkins-agent-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: giddy-magpie-jenkins-agent
  labels:
    "app.kubernetes.io/name": 'jenkins'
    "helm.sh/chart": "jenkins-1.1.23"
    "app.kubernetes.io/managed-by": "Tiller"
    "app.kubernetes.io/instance": "giddy-magpie"
    "app.kubernetes.io/component": "jenkins-master"
spec:
  ports:
    - port: 50000
      targetPort: 50000

      name: slavelistener
  selector:
    "app.kubernetes.io/component": "jenkins-master"
    "app.kubernetes.io/instance": "giddy-magpie"
  type: ClusterIP
---
# Source: jenkins/templates/jenkins-master-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: giddy-magpie-jenkins
  labels:
    "app.kubernetes.io/name": 'jenkins'
    "helm.sh/chart": "jenkins-1.1.23"
    "app.kubernetes.io/managed-by": "Tiller"
    "app.kubernetes.io/instance": "giddy-magpie"
    "app.kubernetes.io/component": "jenkins-master"
spec:
  ports:
    - port: 8080
      name: http
      targetPort: 8080

      nodePort: 32323

  selector:
    "app.kubernetes.io/component": "jenkins-master"
    "app.kubernetes.io/instance": "giddy-magpie"
  type: NodePort
---
# Source: jenkins/templates/jenkins-master-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: giddy-magpie-jenkins
  labels:
    "app.kubernetes.io/name": 'jenkins'
    "helm.sh/chart": "jenkins-1.1.23"
    "app.kubernetes.io/managed-by": "Tiller"
    "app.kubernetes.io/instance": "giddy-magpie"
    "app.kubernetes.io/component": "jenkins-master"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      "app.kubernetes.io/component": "jenkins-master"
      "app.kubernetes.io/instance": "giddy-magpie"
  template:
    metadata:
      labels:
        "app.kubernetes.io/name": 'jenkins'
        "helm.sh/chart": "jenkins-1.1.23"
        "app.kubernetes.io/managed-by": "Tiller"
        "app.kubernetes.io/instance": "giddy-magpie"
        "app.kubernetes.io/component": "jenkins-master"
      annotations:
        checksum/config: c807cec55feb0e3a57b224a01ddfafbb6a2f55917c093104278200295df79877
    spec:
      securityContext:
        runAsUser: 0
      serviceAccountName: "giddy-magpie-jenkins"
      initContainers:
        - name: "copy-default-config"
          image: "jenkins/jenkins:lts"
          imagePullPolicy: "IfNotPresent"
          command: [ "sh", "/var/jenkins_config/apply_config.sh" ]
          env:
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: giddy-magpie-jenkins
                  key: jenkins-admin-password
            - name: ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: giddy-magpie-jenkins
                  key: jenkins-admin-user
          resources:
            limits:
              cpu: 2000m
              memory: 4096Mi
            requests:
              cpu: 50m
              memory: 256Mi

          volumeMounts:
            - mountPath: /tmp
              name: tmp
            - mountPath: /var/jenkins_home
              name: jenkins-home
            - mountPath: /var/jenkins_config
              name: jenkins-config
            - mountPath: /usr/share/jenkins/ref/secrets/
              name: secrets-dir
      containers:
        - name: giddy-magpie-jenkins
          image: "jenkins/jenkins:lts"
          imagePullPolicy: "IfNotPresent"
          args: [ "--argumentsRealm.passwd.$(ADMIN_USER)=$(ADMIN_PASSWORD)",  "--argumentsRealm.roles.$(ADMIN_USER)=admin"]
          env:
            - name: JAVA_OPTS
              value: ""
            - name: JENKINS_OPTS
              value: ""
            - name: JENKINS_SLAVE_AGENT_PORT
              value: "50000"
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: giddy-magpie-jenkins
                  key: jenkins-admin-password
            - name: ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: giddy-magpie-jenkins
                  key: jenkins-admin-user
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 50000
              name: slavelistener
          livenessProbe:
            httpGet:
              path: "/login"
              port: http
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: "/login"
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          resources:
            limits:
              cpu: 2000m
              memory: 4096Mi
            requests:
              cpu: 50m
              memory: 256Mi

          volumeMounts:
            - mountPath: /tmp
              name: tmp
            - mountPath: /var/jenkins_home
              name: jenkins-home
              readOnly: false
            - mountPath: /var/jenkins_config
              name: jenkins-config
              readOnly: true
            - mountPath: /usr/share/jenkins/ref/secrets/
              name: secrets-dir
              readOnly: false

      volumes:
      - name: plugins
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      - name: jenkins-config
        configMap:
          name: giddy-magpie-jenkins
      - name: secrets-dir
        emptyDir: {}
      - name: jenkins-home
        persistentVolumeClaim:
          claimName: giddy-magpie-jenkins
---
# Source: jenkins/templates/jenkins-master-ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  labels:
    "app.kubernetes.io/name": 'jenkins'
    "helm.sh/chart": "jenkins-1.1.23"
    "app.kubernetes.io/managed-by": "Tiller"
    "app.kubernetes.io/instance": "giddy-magpie"
    "app.kubernetes.io/component": "jenkins-master"
  annotations:
    kubernetes.io/ingress.class: nginx

  name: giddy-magpie-jenkins
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: giddy-magpie-jenkins
          servicePort: 8080
---
# Source: jenkins/templates/rbac.yaml
# The sidecar container which is responsible for reloading configuration changes
# needs permissions to watch ConfigMaps
